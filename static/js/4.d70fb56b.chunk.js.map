{"version":3,"sources":["Redux/actions/network.js","Redux/actions/jsonPlaceHolderAction.js","Components/page1.js"],"names":["network","get","url","axios","post","data","patch","jsonPlaceholderActionCreator","payload","type","SAVE_JSON_PLACEHOLDER","netWorkFunction","a","response","useStyles","makeStyles","theme","root","display","flexWrap","alignItems","overflow","backgroundColor","marginTop","gridList","height","Page1","memo","props","hookRef","useRef","classes","contents","nextPageTocall","callPages","useEffect","pageNo","IntersectionObserver","handleObserver","rootMargin","threshold","observe","current","storeNextPage","window","store","getState","jsonPlaceHolderReducer","className","Grid","container","direction","justify","map","tile","index","key","name","item","xs","style","marginBottom","src","process","alt","ref","connect","state","ownprops","dispatch","jsonPlaceholderGetReq"],"mappings":"4NAUiBA,EAPD,CACZC,IAAK,SAACC,GAAD,OAASC,IAAMF,IAAN,UAAaC,KAC3BE,KAAM,SAACF,EAAKG,GAAN,OAAeF,IAAMC,KAAN,UAAcF,GAAOG,IAC1CC,MAAO,SAACJ,EAAKG,GAAN,OACLF,IAAMG,MAAN,UAAeJ,GAAOG,KCArBE,EAA+B,SAACC,GAAD,MAAc,CAChDC,KAAKC,IACLF,YAGEG,EAAe,uCAAG,+BAAAC,EAAA,6DAAQV,EAAR,EAAQA,IAAR,SACGF,EAAQC,IAAIC,GADf,cACdW,EADc,yBAEjBA,GAFiB,2CAAH,sDCNfC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,SAAU,OAEVC,WAAW,SACXC,SAAU,OACVC,gBAAiB,QACjBC,UAAU,QAEZC,SAAU,CAERC,OAAQ,OACRH,gBAAiB,aAIfI,EAAQC,gBAAK,SAACC,GAClB,IAAMC,EAAUC,mBACVC,EAAUjB,IACTkB,EAAuCJ,EAAvCI,SAAUC,EAA6BL,EAA7BK,eAAgBC,EAAaN,EAAbM,UAEjCC,qBAAU,WAMRD,EAAU,CAACE,OAAOH,IACD,IAAII,qBAAqBC,EAN5B,CACZrB,KAAM,KACNsB,WAAY,MACZC,UAAW,KAIJC,QAAQZ,EAAQa,WAExB,IAEH,IAAMJ,EAAiB,WAAO,IAEtBK,EADUC,OAATC,MACqBC,WAAWC,uBAAuBd,eAC3DU,EAAgB,GAAGT,EAAU,CAACE,OAAOO,KAGxC,OACE,yBACEK,UAAWjB,EAAQd,MAErB,yBACE+B,UAAWjB,EAAQd,MAEnB,kBAACgC,EAAA,EAAD,CACAC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRhC,WAAW,SACX4B,UAAWjB,EAAQP,UAElBQ,EAASqB,KAAI,SAACC,EAAKC,GAAN,OACZ,kBAACN,EAAA,EAAD,CAAMO,IAAG,UAAKD,EAAL,YAAcD,EAAKG,MAC5BC,MAAI,EACJC,GAAI,EACJC,MAAO,CAACC,aAAa,SAEnB,yBAAKC,IAAG,UAAKC,cAAL,mBAAsCT,EAAK,iBAAmBU,IAAKV,EAAKG,OAClF,4BAAKH,EAAKG,YAKd,yBACAQ,IAAKpC,QAoBIqC,uBAbf,SAAyBC,EAAMC,GAC7B,MAAO,CACLnC,eAAgBkC,EAAMpB,uBAAuBd,eAC7CD,SAASmC,EAAMpB,uBAAuBf,aAI1C,SAA4BqC,GAC1B,MAAO,CACLnC,UAAW,gBAAEE,EAAF,EAAEA,OAAF,OAAciC,EDxEE,SAAC,GAAa,IAAZjC,EAAW,EAAXA,OAC7B,8CAAO,WAAOiC,GAAP,iBAAAzD,EAAA,sEACoBD,EAAgB,CAACT,IAAI,8BAAD,OAA+BkC,EAA/B,WADxC,OACG5B,EADH,OAEIH,EAAQG,EAARH,KACPgE,EAAS9D,EAA6BF,IAHnC,2CAAP,sDCuEkCiE,CAAsB,CAAClC,gBAI9C8B,CAGbxC","file":"static/js/4.d70fb56b.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nconst network = {\n    get: (url) => axios.get(`${url}`),\n    post: (url, data) => axios.post(`${url}`, data),\n    patch: (url, data) =>\n      axios.patch(`${url}`, data)\n  }\n\n  export default network","\nimport {\n    SAVE_JSON_PLACEHOLDER\n} from '../constants'\n\nimport network from './network'\n\n const jsonPlaceholderActionCreator = (payload) => ({\n    type:SAVE_JSON_PLACEHOLDER,\n    payload\n})\n\nconst netWorkFunction = async ({url}) => {\n    const response = await network.get(url)\nreturn response\n}\n\n const jsonPlaceholderGetReq = ({pageNo}) =>{\n    return async (dispatch)=>{\n        const payload =  await netWorkFunction({url:`API/CONTENTLISTINGPAGE-PAGE${pageNo}.json`})\n        const {data} = payload\n        dispatch(jsonPlaceholderActionCreator(data))\n    }  \n}\n\nexport {\n    jsonPlaceholderGetReq,\n    jsonPlaceholderActionCreator\n}","import React, { memo, useEffect , useRef} from 'react'\nimport { connect } from 'react-redux'\nimport {Grid, makeStyles} from '@material-ui/core';\nimport { jsonPlaceholderGetReq } from '../Redux/actions/jsonPlaceHolderAction'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    // justifyContent: 'space-around',\n    alignItems:'center',\n    overflow: 'auto',\n    backgroundColor: 'black',\n    marginTop:'36px'\n  },\n  gridList: {\n    // width: '50%',\n    height: '100%',\n    backgroundColor: 'black',\n  }\n}));\n\nconst Page1 = memo((props)=> {\n  const hookRef = useRef()\n  const classes = useStyles();\n  const {contents, nextPageTocall, callPages} = props\n\n  useEffect(() => {\n    let options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.1\n    }\n    callPages({pageNo:nextPageTocall})\n    const observer = new IntersectionObserver(handleObserver,options)\n    observer.observe(hookRef.current)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []) \n  \n  const handleObserver = () => {\n    const {store} = window\n    const storeNextPage = store.getState().jsonPlaceHolderReducer.nextPageTocall\n    if(storeNextPage < 4) callPages({pageNo:storeNextPage})\n    }\n\n    return (\n      <div\n        className={classes.root}\n        >\n      <div \n        className={classes.root}\n      >\n        <Grid \n        container \n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.gridList}\n        >\n        {contents.map((tile,index) => (\n          <Grid key={`${index}_${tile.name}`}\n          item\n          xs={4}\n          style={{marginBottom:'90px'}}\n          >\n            <img src={`${process.env.PUBLIC_URL}/Slices/${tile['poster-image']}`} alt={tile.name} />\n          <h3>{tile.name}</h3>\n          </Grid>\n        ))}\n      </Grid>\n      </div>\n      <div\n      ref={hookRef}\n      >        \n        </div>\n        </div>\n    );\n})\n\nfunction mapStateToProps(state,ownprops) {\n  return {\n    nextPageTocall: state.jsonPlaceHolderReducer.nextPageTocall,\n    contents:state.jsonPlaceHolderReducer.contents\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    callPages: ({pageNo}) => dispatch(jsonPlaceholderGetReq({pageNo})),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page1)\n"],"sourceRoot":""}